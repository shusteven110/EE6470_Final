// Generated by stratus_hls 21.20-p100  (96289.240513)
// Tue May 30 22:52:21 2023
// from ../SobelFilter.cpp
#include "SobelFilter_rtl.h"

struct SobelFilter;
SobelFilter::SobelFilter(sc_module_name name) : sc_module(name) 
    ,i_clk("i_clk")
    ,i_rst("i_rst")
    ,i_rgb_busy("i_rgb_busy")
    ,i_rgb_vld("i_rgb_vld")
    ,i_rgb_data("i_rgb_data")
    ,o_avg_busy("o_avg_busy")
    ,o_avg_vld("o_avg_vld")
    ,o_avg_data("o_avg_data")
    ,o_avg_m_req_m_prev_trig_req("o_avg_m_req_m_prev_trig_req")
    ,SobelFilter_Xor_1Ux1U_1U_1_1_out1("SobelFilter_Xor_1Ux1U_1U_1_1_out1")
    ,o_avg_m_unacked_req("o_avg_m_unacked_req")
    ,SobelFilter_Or_1Ux1U_1U_4_2_out1("SobelFilter_Or_1Ux1U_1U_4_2_out1")
    ,SobelFilter_N_Muxb_1_2_0_4_4_out1("SobelFilter_N_Muxb_1_2_0_4_4_out1")
    ,i_rgb_m_unvalidated_req("i_rgb_m_unvalidated_req")
    ,SobelFilter_gen_busy_r_4_16_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next("SobelFilter_gen_busy_r_4_16_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next")
    ,SobelFilter_gen_busy_r_4_16_gdiv("SobelFilter_gen_busy_r_4_16_gdiv")
    ,SobelFilter_gen_busy_r_4_16_gnew_req("SobelFilter_gen_busy_r_4_16_gnew_req")
    ,global_state_next("global_state_next")
    ,SobelFilter_Mul_32Ux32U_32U_4_10_out1("SobelFilter_Mul_32Ux32U_32U_4_10_out1")
    ,SobelFilter_Mul_32Ux32U_32U_4_10_in1("SobelFilter_Mul_32Ux32U_32U_4_10_in1")
    ,gs_ctrl_do_filter_h80("gs_ctrl_do_filter_h80")
    ,gs_ctrl_do_filter_h8("gs_ctrl_do_filter_h8")
    ,SobelFilter_Sub_5Ux1U_6S_4_7_in2("SobelFilter_Sub_5Ux1U_6S_4_7_in2")
    ,gs_ctrl_do_filter_h18("gs_ctrl_do_filter_h18")
    ,gs_ctrl_do_filter_h27("gs_ctrl_do_filter_h27")
    ,gs_ctrl_do_filter_h17f("gs_ctrl_do_filter_h17f")
    ,gs_ctrl_do_filter_h24("gs_ctrl_do_filter_h24")
    ,gs_ctrl_do_filter_h172("gs_ctrl_do_filter_h172")
    ,SobelFilter_Sub_5Ux1U_6S_4_7_out1("SobelFilter_Sub_5Ux1U_6S_4_7_out1")
    ,s_reg_9("s_reg_9")
    ,SobelFilter_gen_busy_r_4_16_out1("SobelFilter_gen_busy_r_4_16_out1")
    ,SobelFilter_And_1Ux1U_1U_4_14_out1("SobelFilter_And_1Ux1U_1U_4_14_out1")
    ,SobelFilter_Not_1U_1U_1_3_out1("SobelFilter_Not_1U_1U_1_3_out1")
    ,o_avg_m_req_m_trig_req("o_avg_m_req_m_trig_req")
    ,SobelFilter_GreaterThan_6Sx2S_1U_4_9_out1("SobelFilter_GreaterThan_6Sx2S_1U_4_9_out1")
    ,i_rgb_m_busy_req_0("i_rgb_m_busy_req_0")
    ,SobelFilter_Add_32Ux32U_32U_4_11_out1("SobelFilter_Add_32Ux32U_32U_4_11_out1")
    ,SobelFilter_Add_5Ux1U_6U_4_6_out1("SobelFilter_Add_5Ux1U_6U_4_6_out1")
    ,global_state("global_state")
    ,stall0("stall0")
    ,filter_coeffs_CE("filter_coeffs_CE")
    ,filter_coeffs_in1("filter_coeffs_in1")
    ,filter_coeffs_out1("filter_coeffs_out1")
    ,shift_reg_DIN("shift_reg_DIN")
    ,shift_reg_CE("shift_reg_CE")
    ,shift_reg_RW("shift_reg_RW")
    ,shift_reg_in1("shift_reg_in1")
    ,shift_reg_out1("shift_reg_out1")
{
  shift_reg = new SobelFilter_RAM_28X32_1("shift_reg");
  shift_reg->DIN(shift_reg_DIN);
  shift_reg->CE(shift_reg_CE);
  shift_reg->RW(shift_reg_RW);
  shift_reg->in1(shift_reg_in1);
  shift_reg->out1(shift_reg_out1);
  shift_reg->clk(i_clk);

  filter_coeffs = new SobelFilter_ROM_28X32_filter_coeffs("filter_coeffs");
  filter_coeffs->CE(filter_coeffs_CE);
  filter_coeffs->in1(filter_coeffs_in1);
  filter_coeffs->out1(filter_coeffs_out1);
  filter_coeffs->clk(i_clk);

  SC_METHOD(drive_o_avg_data);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_i_rgb_m_busy_req_0);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_o_avg_m_req_m_trig_req);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_stall0);
  sensitive << ( global_state );
  sensitive << ( SobelFilter_gen_busy_r_4_16_out1 );
  sensitive << ( SobelFilter_And_1Ux1U_1U_4_14_out1 );

  SC_METHOD(drive_s_reg_9);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(SobelFilter_Add_5Ux1U_6U_4_6);
  sensitive << ( s_reg_9 );

  SC_METHOD(drive_shift_reg_in1);
  sensitive << ( gs_ctrl_do_filter_h172 );
  sensitive << ( s_reg_9 );
  sensitive << ( SobelFilter_Add_5Ux1U_6U_4_6_out1 );
  sensitive << ( SobelFilter_Sub_5Ux1U_6S_4_7_out1 );

  SC_METHOD(drive_shift_reg_DIN);
  sensitive << ( gs_ctrl_do_filter_h24 );
  sensitive << ( shift_reg_out1 );
  sensitive << ( i_rgb_data );

  SC_METHOD(drive_shift_reg_CE);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_h17f );
  sensitive << ( SobelFilter_GreaterThan_6Sx2S_1U_4_9_out1 );

  SC_METHOD(drive_shift_reg_RW);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_h27 );
  sensitive << ( SobelFilter_Add_5Ux1U_6U_4_6_out1 );

  SC_METHOD(drive_SobelFilter_Sub_5Ux1U_6S_4_7_in2);
  sensitive << ( gs_ctrl_do_filter_h18 );
  sensitive << ( s_reg_9 );

  SC_METHOD(SobelFilter_Sub_5Ux1U_6S_4_7);
  sensitive << ( SobelFilter_Sub_5Ux1U_6S_4_7_in2 );

  SC_METHOD(SobelFilter_GreaterThan_6Sx2S_1U_4_9);
  sensitive << ( s_reg_9 );

  SC_METHOD(drive_filter_coeffs_in1);
  sensitive << ( s_reg_9 );

  SC_METHOD(drive_filter_coeffs_CE);
  sensitive << ( stall0 );
  sensitive << ( gs_ctrl_do_filter_h8 );

  SC_METHOD(drive_SobelFilter_Mul_32Ux32U_32U_4_10_in1);
  sensitive << ( gs_ctrl_do_filter_h80 );
  sensitive << ( filter_coeffs_out1 );

  SC_METHOD(SobelFilter_Mul_32Ux32U_32U_4_10);
  sensitive << ( SobelFilter_Mul_32Ux32U_32U_4_10_in1 );
  sensitive << ( shift_reg_out1 );

  SC_METHOD(SobelFilter_Add_32Ux32U_32U_4_11);
  sensitive << ( o_avg_data );
  sensitive << ( SobelFilter_Mul_32Ux32U_32U_4_10_out1 );

  SC_METHOD(drive_global_state);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_global_state_next);
  sensitive << ( global_state );
  sensitive << ( SobelFilter_Add_5Ux1U_6U_4_6_out1 );
  sensitive << ( SobelFilter_GreaterThan_6Sx2S_1U_4_9_out1 );

  SC_METHOD(drive_gs_ctrl_do_filter_h172);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h24);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h17f);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h27);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h18);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h8);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h80);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_i_rgb_busy);
  sensitive << ( SobelFilter_gen_busy_r_4_16_out1 );

  SC_METHOD(SobelFilter_gen_busy_r_4_16_p7);
  sensitive << ( 
  SobelFilter_gen_busy_r_4_16_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next );
  sensitive << ( SobelFilter_gen_busy_r_4_16_gdiv );
  sensitive << ( SobelFilter_gen_busy_r_4_16_gnew_req );

  SC_METHOD(SobelFilter_gen_busy_r_4_16_p6);
  sensitive << ( SobelFilter_gen_busy_r_4_16_gdiv );

  SC_METHOD(SobelFilter_gen_busy_r_4_16_p5);
  sensitive << ( SobelFilter_gen_busy_r_4_16_gnew_req );
  sensitive << ( i_rgb_vld );

  SC_METHOD(SobelFilter_gen_busy_r_4_16_p4);
  sensitive << ( i_rgb_vld );
  sensitive << ( i_rgb_m_unvalidated_req );
  sensitive << ( i_rgb_m_busy_req_0 );

  SC_METHOD(drive_i_rgb_m_unvalidated_req);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(SobelFilter_N_Muxb_1_2_0_4_4);
  sensitive << ( i_rgb_m_busy_req_0 );
  sensitive << ( i_rgb_m_unvalidated_req );
  sensitive << ( i_rgb_vld );

  SC_METHOD(drive_o_avg_vld);
  sensitive << ( SobelFilter_Or_1Ux1U_1U_4_2_out1 );

  SC_METHOD(SobelFilter_Or_1Ux1U_1U_4_2);
  sensitive << ( SobelFilter_Xor_1Ux1U_1U_1_1_out1 );
  sensitive << ( o_avg_m_unacked_req );

  SC_METHOD(drive_o_avg_m_unacked_req);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(SobelFilter_And_1Ux1U_1U_4_14);
  sensitive << ( o_avg_vld );
  sensitive << ( o_avg_busy );

  SC_METHOD(SobelFilter_Xor_1Ux1U_1U_1_1);
  sensitive << ( o_avg_m_req_m_prev_trig_req );
  sensitive << ( o_avg_m_req_m_trig_req );

  SC_METHOD(drive_o_avg_m_req_m_prev_trig_req);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(SobelFilter_Not_1U_1U_1_3);
  sensitive << ( o_avg_m_req_m_trig_req );

}
// resource: mux_32bx2i1c
// resource: regr_en_32
void SobelFilter::drive_o_avg_data(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<4>)(global_state.read()) ) {
    case 1ULL: 
      if ( (28ULL == SobelFilter_Add_5Ux1U_6U_4_6_out1.read()) ) {
        o_avg_data = 0ULL;
      } 
      break;
    case 4ULL: case 7ULL: 
      o_avg_data = (sc_uint<32> ) (SobelFilter_Add_32Ux32U_32U_4_11_out1.read())
      ;
      break;
    case 8ULL: 
      o_avg_data = 0ULL;
      break;
    }
    break;
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_ss_1
void SobelFilter::drive_i_rgb_m_busy_req_0(){
  if ( (i_rst.read() == 0ULL) ) {
    i_rgb_m_busy_req_0 = 1ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<4>)(global_state.read()) ) {
      case 4ULL: 
        if ( SobelFilter_GreaterThan_6Sx2S_1U_4_9_out1.read() );
        else {
          i_rgb_m_busy_req_0 = 0ULL;
        }
        break;
      case 5ULL: 
        i_rgb_m_busy_req_0 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_1
void SobelFilter::drive_o_avg_m_req_m_trig_req(){
  if ( (i_rst.read() == 0ULL) ) {
    o_avg_m_req_m_trig_req = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<4>)(global_state.read()) ) {
      case 7ULL: 
        o_avg_m_req_m_trig_req = (sc_uint<1> ) (SobelFilter_Not_1U_1U_1_3_out1
                                 .read());
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx3i1c
void SobelFilter::drive_stall0(){
  switch( (sc_uint<4>)(global_state.read()) ) {
  default:
    stall0 = 0ULL;
    break;
  case 5ULL: 
    stall0 = (sc_uint<1> )SobelFilter_gen_busy_r_4_16_out1.read();
    break;
  case 8ULL: 
    stall0 = SobelFilter_And_1Ux1U_1U_4_14_out1.read();
    break;
  }
}
// resource: mux_6bx3i1c
// resource: regr_en_sc_6
void SobelFilter::drive_s_reg_9(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_9 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<4>)(global_state.read()) ) {
      case 1ULL: 
        switch( (sc_uint<6>)(SobelFilter_Add_5Ux1U_6U_4_6_out1.read()) ) {
        default:
          s_reg_9 = (sc_uint<6> ) (SobelFilter_Add_5Ux1U_6U_4_6_out1.read());
          break;
        case 28ULL: 
          s_reg_9 = 27ULL;
          break;
        }
        break;
      case 3ULL: 
        s_reg_9 = (sc_uint<6> ) (SobelFilter_Sub_5Ux1U_6S_4_7_out1.read());
        break;
      case 8ULL: 
        s_reg_9 = 27ULL;
        break;
      }
      break;
    }
  }
}
// resource: SobelFilter_Add_5Ux1U_6U_4  instance: SobelFilter_Add_5Ux1U_6U_4_6
void SobelFilter::SobelFilter_Add_5Ux1U_6U_4_6(){
  SobelFilter_Add_5Ux1U_6U_4_6_out1 = (/*cliff*/sc_uint<32>)((sc_uint<5> )
                                      s_reg_9.read() + 1ULL);
}
// resource: mux_5bx4i1c
void SobelFilter::drive_shift_reg_in1(){
  switch( (sc_uint<2>)(gs_ctrl_do_filter_h172.read()) ) {
  default:
    shift_reg_in1 = (sc_uint<5> )s_reg_9.read();
    break;
  case 1ULL: 
    switch( (sc_uint<6>)(SobelFilter_Add_5Ux1U_6U_4_6_out1.read()) ) {
    default:
      shift_reg_in1 = (sc_uint<5> )SobelFilter_Add_5Ux1U_6U_4_6_out1.read();
      break;
    case 28ULL: 
      shift_reg_in1 = (sc_uint<5> )SobelFilter_Sub_5Ux1U_6S_4_7_out1.read();
      break;
    }
    break;
  case 2ULL: 
    shift_reg_in1 = (sc_uint<5> )SobelFilter_Sub_5Ux1U_6S_4_7_out1.read();
    break;
  case 3ULL: 
    shift_reg_in1 = 0ULL;
    break;
  }
}
// resource: mux_32bx3i1c
void SobelFilter::drive_shift_reg_DIN(){
  switch( (sc_uint<2>)(gs_ctrl_do_filter_h24.read()) ) {
  default:
    shift_reg_DIN = 0ULL;
    break;
  case 1ULL: 
    shift_reg_DIN = shift_reg_out1.read();
    break;
  case 2ULL: 
    shift_reg_DIN = i_rgb_data.read();
    break;
  }
}
// resource: mux_1bx2i2c
void SobelFilter::drive_shift_reg_CE(){
  if ( stall0.read() ) {
    shift_reg_CE = 0ULL;
  } else {
    switch( (sc_uint<2>)(gs_ctrl_do_filter_h17f.read()) ) {
    default:
      shift_reg_CE = 0ULL;
      break;
    case 1ULL: 
      shift_reg_CE = 1ULL;
      break;
    case 2ULL: 
      if ( SobelFilter_GreaterThan_6Sx2S_1U_4_9_out1.read() ) {
        shift_reg_CE = 1ULL;
      } else {
        shift_reg_CE = 0ULL;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
void SobelFilter::drive_shift_reg_RW(){
  if ( stall0.read() ) {
    shift_reg_RW = 0ULL;
  } else {
    switch( (sc_uint<2>)(gs_ctrl_do_filter_h27.read()) ) {
    default:
      shift_reg_RW = 0ULL;
      break;
    case 1ULL: 
      shift_reg_RW = 1ULL;
      break;
    case 2ULL: 
      switch( (sc_uint<6>)(SobelFilter_Add_5Ux1U_6U_4_6_out1.read()) ) {
      default:
        shift_reg_RW = 1ULL;
        break;
      case 28ULL: 
        shift_reg_RW = 0ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_5bx2i1c
void SobelFilter::drive_SobelFilter_Sub_5Ux1U_6S_4_7_in2(){
  if ( gs_ctrl_do_filter_h18.read() ) {
    SobelFilter_Sub_5Ux1U_6S_4_7_in2 = (sc_uint<5> )s_reg_9.read();
  } else {
    SobelFilter_Sub_5Ux1U_6S_4_7_in2 = 27ULL;
  }
}
// resource: SobelFilter_Sub_5Ux1U_6S_4  instance: SobelFilter_Sub_5Ux1U_6S_4_7
void SobelFilter::SobelFilter_Sub_5Ux1U_6S_4_7(){
  SobelFilter_Sub_5Ux1U_6S_4_7_out1 = (/*cliff*/sc_int<32>)
                                      SobelFilter_Sub_5Ux1U_6S_4_7_in2.read() - 
                                      1ULL;
}
// resource: SobelFilter_GreaterThan_6Sx2S_1U_4  instance: SobelFilter_GreaterThan_6Sx2S_1U_4_9
void SobelFilter::SobelFilter_GreaterThan_6Sx2S_1U_4_9(){
  SobelFilter_GreaterThan_6Sx2S_1U_4_9_out1 = (/*imp*/sc_uint<1>)((sc_int<6> )
                                              s_reg_9.read() > (sc_int<2> )0LL);
}
void SobelFilter::drive_filter_coeffs_in1(){
  filter_coeffs_in1 = (sc_uint<5> )s_reg_9.read();
}
// resource: mux_1bx2i2c
void SobelFilter::drive_filter_coeffs_CE(){
  if ( stall0.read() ) {
    filter_coeffs_CE = 0ULL;
  } else {
    if ( gs_ctrl_do_filter_h8.read() ) {
      filter_coeffs_CE = 1ULL;
    } else {
      filter_coeffs_CE = 0ULL;
    }
  }
}
// resource: mux_32bx2i1c
void SobelFilter::drive_SobelFilter_Mul_32Ux32U_32U_4_10_in1(){
  if ( gs_ctrl_do_filter_h80.read() ) {
    SobelFilter_Mul_32Ux32U_32U_4_10_in1 = 9ULL;
  } else {
    SobelFilter_Mul_32Ux32U_32U_4_10_in1 = (sc_uint<32> ) (filter_coeffs_out1
                                           .read());
  }
}
// resource: SobelFilter_Mul_32Ux32U_32U_4  instance: SobelFilter_Mul_32Ux32U_32U_4_10
void SobelFilter::SobelFilter_Mul_32Ux32U_32U_4_10(){
  SobelFilter_Mul_32Ux32U_32U_4_10_out1 = (/*cliff*/sc_uint<32>)(sc_uint<32> )
                                          shift_reg_out1.read() * 
                                          SobelFilter_Mul_32Ux32U_32U_4_10_in1
                                          .read();
}
// resource: SobelFilter_Add_32Ux32U_32U_4  instance: SobelFilter_Add_32Ux32U_32U_4_11
void SobelFilter::SobelFilter_Add_32Ux32U_32U_4_11(){
  SobelFilter_Add_32Ux32U_32U_4_11_out1 = (/*cliff*/sc_uint<32>)(
                                          SobelFilter_Mul_32Ux32U_32U_4_10_out1
                                          .read() + (sc_uint<32> )o_avg_data
                                          .read());
}
// resource: regr_en_sc_4
void SobelFilter::drive_global_state(){
  if ( (i_rst.read() == 0ULL) ) {
    global_state = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      global_state = global_state_next.read();
      break;
    }
  }
}
// resource: mux_4bx3i2c
void SobelFilter::drive_global_state_next(){
  switch( (sc_uint<4>)(global_state.read()) ) {
  default:
    global_state_next = (global_state.read() + 1ULL);
    break;
  case 1ULL: 
    switch( (sc_uint<6>)(SobelFilter_Add_5Ux1U_6U_4_6_out1.read()) ) {
    default:
      global_state_next = 1ULL;
      break;
    case 28ULL: 
      global_state_next = (global_state.read() + 1ULL);
      break;
    }
    break;
  case 4ULL: 
    if ( SobelFilter_GreaterThan_6Sx2S_1U_4_9_out1.read() ) {
      global_state_next = 2ULL;
    } else {
      global_state_next = (global_state.read() + 1ULL);
    }
    break;
  case 8ULL: 
    global_state_next = 2ULL;
    break;
  }
}
// resource: mux_2bx4i4c
// resource: regr_en_sc_2
void SobelFilter::drive_gs_ctrl_do_filter_h172(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h172 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<4>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h172 = 0ULL;
        break;
      case 1ULL: 
        gs_ctrl_do_filter_h172 = 1ULL;
        break;
      case 4ULL: case 8ULL: 
        gs_ctrl_do_filter_h172 = 2ULL;
        break;
      case 5ULL: case 6ULL: 
        gs_ctrl_do_filter_h172 = 3ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx3i3c
// resource: regr_en_sc_2
void SobelFilter::drive_gs_ctrl_do_filter_h24(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h24 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<4>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h24 = 0ULL;
        break;
      case 2ULL: 
        gs_ctrl_do_filter_h24 = 1ULL;
        break;
      case 5ULL: 
        gs_ctrl_do_filter_h24 = 2ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx3i3c
// resource: regr_en_ss_sc_2
void SobelFilter::drive_gs_ctrl_do_filter_h17f(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h17f = 1ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<4>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h17f = 0ULL;
        break;
      case 0ULL: case 1ULL: case 2ULL: case 3ULL: case 5ULL: case 6ULL: case 
      8ULL: 
        gs_ctrl_do_filter_h17f = 1ULL;
        break;
      case 4ULL: 
        gs_ctrl_do_filter_h17f = 2ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_2bx3i3c
// resource: regr_en_ss_sc_2
void SobelFilter::drive_gs_ctrl_do_filter_h27(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h27 = 1ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<4>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h27 = 0ULL;
        break;
      case 0ULL: case 2ULL: case 5ULL: 
        gs_ctrl_do_filter_h27 = 1ULL;
        break;
      case 1ULL: 
        gs_ctrl_do_filter_h27 = 2ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h18(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h18 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<4>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h18 = 0ULL;
        break;
      case 3ULL: case 4ULL: 
        gs_ctrl_do_filter_h18 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h8(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h8 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<4>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h8 = 0ULL;
        break;
      case 3ULL: 
        gs_ctrl_do_filter_h8 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h80(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h80 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<4>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h80 = 0ULL;
        break;
      case 7ULL: 
        gs_ctrl_do_filter_h80 = 1ULL;
        break;
      }
      break;
    }
  }
}
void SobelFilter::drive_i_rgb_busy(){
  i_rgb_busy = (sc_uint<1> ) (((/*imp*/sc_uint<1> ) 
               SobelFilter_gen_busy_r_4_16_out1.read().range(2,2)));
}
// resource: SobelFilter_gen_busy_r_4  instance: SobelFilter_gen_busy_r_4_16
void SobelFilter::SobelFilter_gen_busy_r_4_16_p7(){
  SobelFilter_gen_busy_r_4_16_out1 = (sc_uint<3> ) (( (sc_biguint<3> )(sc_bv<3>)
                                     ((sc_bv<1>)(
                                     SobelFilter_gen_busy_r_4_16_gnew_req.read()
                                     ), 
                                     (sc_bv<2>)(( (sc_biguint<2> )(sc_bv<2>)(
                                     (sc_bv<1>)(SobelFilter_gen_busy_r_4_16_gdiv
                                     .read()), 
                                     (sc_bv<1>)(SobelFilter_gen_busy_r_4_16_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next
                                     .read())) ))) ));
}
// resource: SobelFilter_gen_busy_r_4  instance: SobelFilter_gen_busy_r_4_16
void SobelFilter::SobelFilter_gen_busy_r_4_16_p6(){
  SobelFilter_gen_busy_r_4_16_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next = ~(sc_uint<1>)SobelFilter_gen_busy_r_4_16_gdiv.read()
  ;
}
// resource: SobelFilter_gen_busy_r_4  instance: SobelFilter_gen_busy_r_4_16
void SobelFilter::SobelFilter_gen_busy_r_4_16_p5(){
  SobelFilter_gen_busy_r_4_16_gdiv = (sc_uint<1> ) ((sc_uint<1> )i_rgb_vld
                                     .read() & !
                                     SobelFilter_gen_busy_r_4_16_gnew_req.read()
                                     );
}
// resource: SobelFilter_gen_busy_r_4  instance: SobelFilter_gen_busy_r_4_16
void SobelFilter::SobelFilter_gen_busy_r_4_16_p4(){
  SobelFilter_gen_busy_r_4_16_gnew_req = (sc_uint<1> ) ((sc_uint<1> )
                                         i_rgb_m_busy_req_0.read() & ( 
                                         i_rgb_m_unvalidated_req.read() | 
                                         i_rgb_vld.read() ));
}
// resource: regr_ss_1
void SobelFilter::drive_i_rgb_m_unvalidated_req(){
  if ( (i_rst.read() == 0ULL) ) {
    i_rgb_m_unvalidated_req = 1ULL;
  } else {
    i_rgb_m_unvalidated_req = (sc_uint<1> ) (SobelFilter_N_Muxb_1_2_0_4_4_out1
                              .read());
  }
}
// resource: SobelFilter_N_Muxb_1_2_0_4
void SobelFilter::SobelFilter_N_Muxb_1_2_0_4_4(){
  if ( i_rgb_m_busy_req_0.read() ) {
    SobelFilter_N_Muxb_1_2_0_4_4_out1 = (sc_uint<1> ) (i_rgb_m_unvalidated_req
                                        .read());
  } else {
    SobelFilter_N_Muxb_1_2_0_4_4_out1 = (sc_uint<1> ) (i_rgb_vld.read());
  }
}
void SobelFilter::drive_o_avg_vld(){
  o_avg_vld = (sc_uint<1> ) (SobelFilter_Or_1Ux1U_1U_4_2_out1.read());
}
// resource: SobelFilter_Or_1Ux1U_1U_4  instance: SobelFilter_Or_1Ux1U_1U_4_2
void SobelFilter::SobelFilter_Or_1Ux1U_1U_4_2(){
  SobelFilter_Or_1Ux1U_1U_4_2_out1 = (sc_uint<1> ) (o_avg_m_unacked_req.read()
                                      | (sc_uint<1>)
                                     SobelFilter_Xor_1Ux1U_1U_1_1_out1.read());
}
// resource: regr_sc_1
void SobelFilter::drive_o_avg_m_unacked_req(){
  if ( (i_rst.read() == 0ULL) ) {
    o_avg_m_unacked_req = 0ULL;
  } else {
    o_avg_m_unacked_req = (sc_uint<1> ) (SobelFilter_And_1Ux1U_1U_4_14_out1
                          .read());
  }
}
// resource: SobelFilter_And_1Ux1U_1U_4  instance: SobelFilter_And_1Ux1U_1U_4_14
void SobelFilter::SobelFilter_And_1Ux1U_1U_4_14(){
  SobelFilter_And_1Ux1U_1U_4_14_out1 = (sc_uint<1> ) (o_avg_busy.read() & 
                                       o_avg_vld.read());
}
// resource: SobelFilter_Xor_1Ux1U_1U_1  instance: SobelFilter_Xor_1Ux1U_1U_1_1
void SobelFilter::SobelFilter_Xor_1Ux1U_1U_1_1(){
  SobelFilter_Xor_1Ux1U_1U_1_1_out1 = (sc_uint<1> ) (o_avg_m_req_m_trig_req
                                      .read() ^ o_avg_m_req_m_prev_trig_req
                                      .read());
}
// resource: regr_sc_1
void SobelFilter::drive_o_avg_m_req_m_prev_trig_req(){
  if ( (i_rst.read() == 0ULL) ) {
    o_avg_m_req_m_prev_trig_req = 0ULL;
  } else {
    o_avg_m_req_m_prev_trig_req = o_avg_m_req_m_trig_req.read();
  }
}
// resource: SobelFilter_Not_1U_1U_1  instance: SobelFilter_Not_1U_1U_1_3
void SobelFilter::SobelFilter_Not_1U_1U_1_3(){
  SobelFilter_Not_1U_1U_1_3_out1 = !o_avg_m_req_m_trig_req.read();
}
