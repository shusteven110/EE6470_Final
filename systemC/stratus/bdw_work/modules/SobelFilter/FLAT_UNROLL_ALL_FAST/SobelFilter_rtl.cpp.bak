// Generated by stratus_hls 21.20-p100  (96289.240513)
// Tue May 30 21:55:11 2023
// from ../SobelFilter.cpp
#include "SobelFilter_rtl.h"

struct SobelFilter;
SobelFilter::SobelFilter(sc_module_name name) : sc_module(name) 
    ,i_clk("i_clk")
    ,i_rst("i_rst")
    ,i_rgb_busy("i_rgb_busy")
    ,i_rgb_vld("i_rgb_vld")
    ,i_rgb_data("i_rgb_data")
    ,o_avg_busy("o_avg_busy")
    ,o_avg_vld("o_avg_vld")
    ,o_avg_data("o_avg_data")
    ,o_avg_m_req_m_prev_trig_req("o_avg_m_req_m_prev_trig_req")
    ,SobelFilter_Xor_1Ux1U_1U_1_1_out1("SobelFilter_Xor_1Ux1U_1U_1_1_out1")
    ,o_avg_m_unacked_req("o_avg_m_unacked_req")
    ,SobelFilter_Or_1Ux1U_1U_4_2_out1("SobelFilter_Or_1Ux1U_1U_4_2_out1")
    ,SobelFilter_N_Muxb_1_2_0_4_4_out1("SobelFilter_N_Muxb_1_2_0_4_4_out1")
    ,i_rgb_m_unvalidated_req("i_rgb_m_unvalidated_req")
    ,SobelFilter_gen_busy_r_4_62_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next("SobelFilter_gen_busy_r_4_62_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next")
    ,SobelFilter_gen_busy_r_4_62_gdiv("SobelFilter_gen_busy_r_4_62_gdiv")
    ,SobelFilter_gen_busy_r_4_62_gnew_req("SobelFilter_gen_busy_r_4_62_gnew_req")
    ,global_state_next("global_state_next")
    ,SobelFilter_Mul_32Sx3S_32S_4_26_in2("SobelFilter_Mul_32Sx3S_32S_4_26_in2")
    ,SobelFilter_Add_32Ux32U_32U_1_24_in2("SobelFilter_Add_32Ux32U_32U_1_24_in2")
    ,SobelFilter_Mul_32Sx3S_32S_4_23_out1("SobelFilter_Mul_32Sx3S_32S_4_23_out1")
    ,SobelFilter_Mul_32Sx3S_32S_4_23_in2("SobelFilter_Mul_32Sx3S_32S_4_23_in2")
    ,SobelFilter_Add_32Ux32U_32U_1_22_out1("SobelFilter_Add_32Ux32U_32U_1_22_out1")
    ,SobelFilter_Mul_32Sx7S_32S_4_21_out1("SobelFilter_Mul_32Sx7S_32S_4_21_out1")
    ,SobelFilter_Mul_32Sx7S_32S_4_21_in1_slice("SobelFilter_Mul_32Sx7S_32S_4_21_in1_slice")
    ,SobelFilter_Mul_32Sx7S_32S_4_21_in2("SobelFilter_Mul_32Sx7S_32S_4_21_in2")
    ,SobelFilter_Add_32Ux32U_32U_1_20_out1("SobelFilter_Add_32Ux32U_32U_1_20_out1")
    ,SobelFilter_Mul_32Sx7S_32S_4_19_out1("SobelFilter_Mul_32Sx7S_32S_4_19_out1")
    ,SobelFilter_Mul_32Sx7S_32S_4_19_in1_slice("SobelFilter_Mul_32Sx7S_32S_4_19_in1_slice")
    ,SobelFilter_Mul_32Sx7S_32S_4_19_in2("SobelFilter_Mul_32Sx7S_32S_4_19_in2")
    ,SobelFilter_Add_32Ux32U_32U_4_18_out1("SobelFilter_Add_32Ux32U_32U_4_18_out1")
    ,SobelFilter_Add_32Ux32U_32U_4_18_in1("SobelFilter_Add_32Ux32U_32U_4_18_in1")
    ,SobelFilter_Add_32Ux32U_32U_4_34_out1("SobelFilter_Add_32Ux32U_32U_4_34_out1")
    ,SobelFilter_Add_32Ux32U_32U_4_18_in2("SobelFilter_Add_32Ux32U_32U_4_18_in2")
    ,SobelFilter_Add_32Ux32U_32U_4_32_out1("SobelFilter_Add_32Ux32U_32U_4_32_out1")
    ,SobelFilter_Add_32Ux32U_32U_4_31_out1("SobelFilter_Add_32Ux32U_32U_4_31_out1")
    ,SobelFilter_Add_32Ux32U_32U_4_31_in1("SobelFilter_Add_32Ux32U_32U_4_31_in1")
    ,SobelFilter_Add_32Ux32U_32U_4_31_in2("SobelFilter_Add_32Ux32U_32U_4_31_in2")
    ,SobelFilter_Minus_32S_32S_4_16_in1_slice("SobelFilter_Minus_32S_32S_4_16_in1_slice")
    ,SobelFilter_Mul_32Sx6S_32S_4_15_in1_slice("SobelFilter_Mul_32Sx6S_32S_4_15_in1_slice")
    ,SobelFilter_Mul_32Sx6S_32S_4_15_in2("SobelFilter_Mul_32Sx6S_32S_4_15_in2")
    ,SobelFilter_Add_32Ux32U_32U_4_14_out1("SobelFilter_Add_32Ux32U_32U_4_14_out1")
    ,SobelFilter_Add_32Ux32U_32U_4_14_in1("SobelFilter_Add_32Ux32U_32U_4_14_in1")
    ,SobelFilter_Add_32Ux32U_32U_4_14_in2("SobelFilter_Add_32Ux32U_32U_4_14_in2")
    ,gs_ctrl_do_filter_h4("gs_ctrl_do_filter_h4")
    ,SobelFilter_Mul_32Sx4U_32S_4_13_in2("SobelFilter_Mul_32Sx4U_32S_4_13_in2")
    ,gs_ctrl_do_filter_h2("gs_ctrl_do_filter_h2")
    ,SobelFilter_Add_32Ux32U_32U_4_12_out1("SobelFilter_Add_32Ux32U_32U_4_12_out1")
    ,SobelFilter_Add_32Ux32U_32U_4_11_out1("SobelFilter_Add_32Ux32U_32U_4_11_out1")
    ,SobelFilter_Minus_32S_32S_4_10_out1("SobelFilter_Minus_32S_32S_4_10_out1")
    ,SobelFilter_Minus_32S_32S_4_10_in1("SobelFilter_Minus_32S_32S_4_10_in1")
    ,SobelFilter_Mul_32Sx4S_32S_4_9_out1("SobelFilter_Mul_32Sx4S_32S_4_9_out1")
    ,SobelFilter_Add_32Ux32U_32U_4_8_out1("SobelFilter_Add_32Ux32U_32U_4_8_out1")
    ,SobelFilter_Mul_32Sx7S_32S_4_7_out1("SobelFilter_Mul_32Sx7S_32S_4_7_out1")
    ,SobelFilter_Mul_32Sx7S_32S_4_7_in1_slice("SobelFilter_Mul_32Sx7S_32S_4_7_in1_slice")
    ,SobelFilter_Mul_32Sx7S_32S_4_7_in2("SobelFilter_Mul_32Sx7S_32S_4_7_in2")
    ,SobelFilter_Add_32Ux32U_32U_4_6_out1("SobelFilter_Add_32Ux32U_32U_4_6_out1")
    ,SobelFilter_Add_32Ux32U_32U_4_6_in2("SobelFilter_Add_32Ux32U_32U_4_6_in2")
    ,gs_ctrl_do_filter_h6("gs_ctrl_do_filter_h6")
    ,s_reg_9("s_reg_9")
    ,s_reg_8("s_reg_8")
    ,SobelFilter_Minus_32S_32S_4_16_out1("SobelFilter_Minus_32S_32S_4_16_out1")
    ,s_reg_66("s_reg_66")
    ,s_reg_6_slice("s_reg_6_slice")
    ,s_reg_7("s_reg_7")
    ,s_reg_5("s_reg_5")
    ,SobelFilter_Mul_32Sx4U_32S_4_13_out1("SobelFilter_Mul_32Sx4U_32S_4_13_out1")
    ,SobelFilter_Mul_32Sx9U_32S_4_27_out1("SobelFilter_Mul_32Sx9U_32S_4_27_out1")
    ,s_reg_49("s_reg_49")
    ,s_reg_4("s_reg_4")
    ,SobelFilter_Mul_32Sx3S_32S_4_26_out1("SobelFilter_Mul_32Sx3S_32S_4_26_out1")
    ,s_reg_31("s_reg_31")
    ,s_reg_30("s_reg_30")
    ,s_reg_29("s_reg_29")
    ,s_reg_28("s_reg_28")
    ,s_reg_27("s_reg_27")
    ,s_reg_26("s_reg_26")
    ,s_reg_25("s_reg_25")
    ,s_reg_24("s_reg_24")
    ,s_reg_23("s_reg_23")
    ,s_reg_22("s_reg_22")
    ,s_reg_21("s_reg_21")
    ,s_reg_20("s_reg_20")
    ,s_reg_19("s_reg_19")
    ,s_reg_18("s_reg_18")
    ,s_reg_17("s_reg_17")
    ,s_reg_16("s_reg_16")
    ,s_reg_15("s_reg_15")
    ,s_reg_14("s_reg_14")
    ,s_reg_13("s_reg_13")
    ,s_reg_12("s_reg_12")
    ,s_reg_11("s_reg_11")
    ,s_reg_10("s_reg_10")
    ,SobelFilter_gen_busy_r_4_62_out1("SobelFilter_gen_busy_r_4_62_out1")
    ,SobelFilter_And_1Ux1U_1U_4_60_out1("SobelFilter_And_1Ux1U_1U_4_60_out1")
    ,SobelFilter_Not_1U_1U_1_3_out1("SobelFilter_Not_1U_1U_1_3_out1")
    ,o_avg_m_req_m_trig_req("o_avg_m_req_m_trig_req")
    ,i_rgb_m_busy_req_0("i_rgb_m_busy_req_0")
    ,SobelFilter_Add_32Ux32U_32U_1_24_out1("SobelFilter_Add_32Ux32U_32U_1_24_out1")
    ,SobelFilter_Mul_32Sx6S_32S_4_15_out1("SobelFilter_Mul_32Sx6S_32S_4_15_out1")
    ,SobelFilter_Mul_32Sx6U_32S_4_25_out1("SobelFilter_Mul_32Sx6U_32S_4_25_out1")
    ,global_state("global_state")
    ,stall0("stall0")
{
  SC_METHOD(drive_o_avg_data);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_i_rgb_m_busy_req_0);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_o_avg_m_req_m_trig_req);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_stall0);
  sensitive << ( global_state );
  sensitive << ( SobelFilter_gen_busy_r_4_62_out1 );
  sensitive << ( SobelFilter_And_1Ux1U_1U_4_60_out1 );

  SC_METHOD(drive_s_reg_10);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_11);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_12);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_13);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_14);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_15);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_16);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_17);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_18);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_19);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_20);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_21);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_22);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_23);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_24);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_25);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_26);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_27);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_28);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_29);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_30);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_31);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_4);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_49);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_5);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_6_slice);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_66);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_7);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_8);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_s_reg_9);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_SobelFilter_Add_32Ux32U_32U_4_6_in2);
  sensitive << ( gs_ctrl_do_filter_h6 );
  sensitive << ( o_avg_data );
  sensitive << ( s_reg_6_slice );

  SC_METHOD(SobelFilter_Add_32Ux32U_32U_4_6);
  sensitive << ( s_reg_4 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_6_in2 );

  SC_METHOD(drive_SobelFilter_Mul_32Sx7S_32S_4_7_in2);
  sensitive << ( global_state );
  sensitive << ( s_reg_5 );
  sensitive << ( s_reg_15 );
  sensitive << ( s_reg_24 );

  SC_METHOD(drive_SobelFilter_Mul_32Sx7S_32S_4_7_in1_slice);
  sensitive << ( global_state );

  SC_METHOD(SobelFilter_Mul_32Sx7S_32S_4_7);
  sensitive << ( SobelFilter_Mul_32Sx7S_32S_4_7_in1_slice );
  sensitive << ( SobelFilter_Mul_32Sx7S_32S_4_7_in2 );

  SC_METHOD(SobelFilter_Add_32Ux32U_32U_4_8);
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_6_out1 );
  sensitive << ( SobelFilter_Mul_32Sx7S_32S_4_7_out1 );

  SC_METHOD(SobelFilter_Mul_32Sx4S_32S_4_9);
  sensitive << ( s_reg_7 );

  SC_METHOD(drive_SobelFilter_Minus_32S_32S_4_10_in1);
  sensitive << ( s_reg_8 );

  SC_METHOD(SobelFilter_Minus_32S_32S_4_10);
  sensitive << ( SobelFilter_Minus_32S_32S_4_10_in1 );

  SC_METHOD(SobelFilter_Add_32Ux32U_32U_4_11);
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_8_out1 );
  sensitive << ( SobelFilter_Mul_32Sx4S_32S_4_9_out1 );

  SC_METHOD(SobelFilter_Add_32Ux32U_32U_4_12);
  sensitive << ( SobelFilter_Minus_32S_32S_4_10_out1 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_11_out1 );

  SC_METHOD(drive_SobelFilter_Mul_32Sx4U_32S_4_13_in2);
  sensitive << ( gs_ctrl_do_filter_h2 );
  sensitive << ( s_reg_27 );
  sensitive << ( s_reg_9 );

  SC_METHOD(SobelFilter_Mul_32Sx4U_32S_4_13);
  sensitive << ( SobelFilter_Mul_32Sx4U_32S_4_13_in2 );

  SC_METHOD(drive_SobelFilter_Add_32Ux32U_32U_4_14_in2);
  sensitive << ( gs_ctrl_do_filter_h4 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_8_out1 );
  sensitive << ( SobelFilter_Mul_32Sx4U_32S_4_13_out1 );

  SC_METHOD(drive_SobelFilter_Add_32Ux32U_32U_4_14_in1);
  sensitive << ( gs_ctrl_do_filter_h4 );
  sensitive << ( s_reg_66 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_12_out1 );

  SC_METHOD(SobelFilter_Add_32Ux32U_32U_4_14);
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_14_in1 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_14_in2 );

  SC_METHOD(drive_SobelFilter_Mul_32Sx6S_32S_4_15_in2);
  sensitive << ( global_state );
  sensitive << ( s_reg_10 );
  sensitive << ( s_reg_23 );
  sensitive << ( s_reg_26 );

  SC_METHOD(drive_SobelFilter_Mul_32Sx6S_32S_4_15_in1_slice);
  sensitive << ( gs_ctrl_do_filter_h2 );

  SC_METHOD(SobelFilter_Mul_32Sx6S_32S_4_15);
  sensitive << ( SobelFilter_Mul_32Sx6S_32S_4_15_in1_slice );
  sensitive << ( SobelFilter_Mul_32Sx6S_32S_4_15_in2 );

  SC_METHOD(drive_SobelFilter_Minus_32S_32S_4_16_in1_slice);
  sensitive << ( global_state );
  sensitive << ( s_reg_11 );
  sensitive << ( s_reg_25 );
  sensitive << ( s_reg_28 );

  SC_METHOD(SobelFilter_Minus_32S_32S_4_16);
  sensitive << ( SobelFilter_Minus_32S_32S_4_16_in1_slice );

  SC_METHOD(drive_SobelFilter_Add_32Ux32U_32U_4_31_in2);
  sensitive << ( gs_ctrl_do_filter_h2 );
  sensitive << ( s_reg_31 );
  sensitive << ( SobelFilter_Mul_32Sx6S_32S_4_15_out1 );

  SC_METHOD(drive_SobelFilter_Add_32Ux32U_32U_4_31_in1);
  sensitive << ( gs_ctrl_do_filter_h2 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_8_out1 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_14_out1 );

  SC_METHOD(SobelFilter_Add_32Ux32U_32U_4_31);
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_31_in1 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_31_in2 );

  SC_METHOD(drive_SobelFilter_Add_32Ux32U_32U_4_18_in2);
  sensitive << ( global_state );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_31_out1 );
  sensitive << ( SobelFilter_Mul_32Sx3S_32S_4_26_out1 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_32_out1 );

  SC_METHOD(drive_SobelFilter_Add_32Ux32U_32U_4_18_in1);
  sensitive << ( gs_ctrl_do_filter_h2 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_34_out1 );
  sensitive << ( SobelFilter_Minus_32S_32S_4_16_out1 );

  SC_METHOD(SobelFilter_Add_32Ux32U_32U_4_18);
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_18_in1 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_18_in2 );

  SC_METHOD(drive_SobelFilter_Mul_32Sx7S_32S_4_19_in2);
  sensitive << ( global_state );
  sensitive << ( s_reg_12 );
  sensitive << ( s_reg_20 );
  sensitive << ( s_reg_29 );

  SC_METHOD(drive_SobelFilter_Mul_32Sx7S_32S_4_19_in1_slice);
  sensitive << ( global_state );

  SC_METHOD(SobelFilter_Mul_32Sx7S_32S_4_19);
  sensitive << ( SobelFilter_Mul_32Sx7S_32S_4_19_in1_slice );
  sensitive << ( SobelFilter_Mul_32Sx7S_32S_4_19_in2 );

  SC_METHOD(SobelFilter_Add_32Ux32U_32U_1_20);
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_18_out1 );
  sensitive << ( SobelFilter_Mul_32Sx7S_32S_4_19_out1 );

  SC_METHOD(drive_SobelFilter_Mul_32Sx7S_32S_4_21_in2);
  sensitive << ( global_state );
  sensitive << ( s_reg_13 );
  sensitive << ( s_reg_21 );
  sensitive << ( s_reg_30 );

  SC_METHOD(drive_SobelFilter_Mul_32Sx7S_32S_4_21_in1_slice);
  sensitive << ( global_state );

  SC_METHOD(SobelFilter_Mul_32Sx7S_32S_4_21);
  sensitive << ( SobelFilter_Mul_32Sx7S_32S_4_21_in1_slice );
  sensitive << ( SobelFilter_Mul_32Sx7S_32S_4_21_in2 );

  SC_METHOD(SobelFilter_Add_32Ux32U_32U_1_22);
  sensitive << ( SobelFilter_Add_32Ux32U_32U_1_20_out1 );
  sensitive << ( SobelFilter_Mul_32Sx7S_32S_4_21_out1 );

  SC_METHOD(drive_SobelFilter_Mul_32Sx3S_32S_4_23_in2);
  sensitive << ( gs_ctrl_do_filter_h2 );
  sensitive << ( s_reg_22 );
  sensitive << ( s_reg_14 );

  SC_METHOD(SobelFilter_Mul_32Sx3S_32S_4_23);
  sensitive << ( SobelFilter_Mul_32Sx3S_32S_4_23_in2 );

  SC_METHOD(drive_SobelFilter_Add_32Ux32U_32U_1_24_in2);
  sensitive << ( gs_ctrl_do_filter_h4 );
  sensitive << ( s_reg_31 );
  sensitive << ( SobelFilter_Mul_32Sx3S_32S_4_23_out1 );

  SC_METHOD(SobelFilter_Add_32Ux32U_32U_1_24);
  sensitive << ( SobelFilter_Add_32Ux32U_32U_1_22_out1 );
  sensitive << ( SobelFilter_Add_32Ux32U_32U_1_24_in2 );

  SC_METHOD(SobelFilter_Mul_32Sx6U_32S_4_25);
  sensitive << ( s_reg_15 );

  SC_METHOD(drive_SobelFilter_Mul_32Sx3S_32S_4_26_in2);
  sensitive << ( gs_ctrl_do_filter_h2 );
  sensitive << ( s_reg_19 );
  sensitive << ( s_reg_17 );

  SC_METHOD(SobelFilter_Mul_32Sx3S_32S_4_26);
  sensitive << ( SobelFilter_Mul_32Sx3S_32S_4_26_in2 );

  SC_METHOD(SobelFilter_Mul_32Sx9U_32S_4_27);
  sensitive << ( s_reg_18 );

  SC_METHOD(SobelFilter_Add_32Ux32U_32U_4_32);
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_31_out1 );
  sensitive << ( s_reg_49 );

  SC_METHOD(SobelFilter_Add_32Ux32U_32U_4_34);
  sensitive << ( SobelFilter_Add_32Ux32U_32U_4_32_out1 );
  sensitive << ( SobelFilter_Mul_32Sx9U_32S_4_27_out1 );

  SC_METHOD(drive_global_state);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_global_state_next);
  sensitive << ( global_state );

  SC_METHOD(drive_gs_ctrl_do_filter_h6);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h2);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_gs_ctrl_do_filter_h4);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(drive_i_rgb_busy);
  sensitive << ( SobelFilter_gen_busy_r_4_62_out1 );

  SC_METHOD(SobelFilter_gen_busy_r_4_62_p7);
  sensitive << ( 
  SobelFilter_gen_busy_r_4_62_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next );
  sensitive << ( SobelFilter_gen_busy_r_4_62_gdiv );
  sensitive << ( SobelFilter_gen_busy_r_4_62_gnew_req );

  SC_METHOD(SobelFilter_gen_busy_r_4_62_p6);
  sensitive << ( SobelFilter_gen_busy_r_4_62_gdiv );

  SC_METHOD(SobelFilter_gen_busy_r_4_62_p5);
  sensitive << ( SobelFilter_gen_busy_r_4_62_gnew_req );
  sensitive << ( i_rgb_vld );

  SC_METHOD(SobelFilter_gen_busy_r_4_62_p4);
  sensitive << ( i_rgb_vld );
  sensitive << ( i_rgb_m_unvalidated_req );
  sensitive << ( i_rgb_m_busy_req_0 );

  SC_METHOD(drive_i_rgb_m_unvalidated_req);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(SobelFilter_N_Muxb_1_2_0_4_4);
  sensitive << ( i_rgb_m_busy_req_0 );
  sensitive << ( i_rgb_m_unvalidated_req );
  sensitive << ( i_rgb_vld );

  SC_METHOD(drive_o_avg_vld);
  sensitive << ( SobelFilter_Or_1Ux1U_1U_4_2_out1 );

  SC_METHOD(SobelFilter_Or_1Ux1U_1U_4_2);
  sensitive << ( SobelFilter_Xor_1Ux1U_1U_1_1_out1 );
  sensitive << ( o_avg_m_unacked_req );

  SC_METHOD(drive_o_avg_m_unacked_req);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(SobelFilter_And_1Ux1U_1U_4_60);
  sensitive << ( o_avg_vld );
  sensitive << ( o_avg_busy );

  SC_METHOD(SobelFilter_Xor_1Ux1U_1U_1_1);
  sensitive << ( o_avg_m_req_m_prev_trig_req );
  sensitive << ( o_avg_m_req_m_trig_req );

  SC_METHOD(drive_o_avg_m_req_m_prev_trig_req);
  sensitive << i_clk.pos();
  dont_initialize();

  SC_METHOD(SobelFilter_Not_1U_1U_1_3);
  sensitive << ( o_avg_m_req_m_trig_req );

}
// resource: mux_32bx3i0c
// resource: regr_en_32
void SobelFilter::drive_o_avg_data(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<2>)(global_state.read()) ) {
    case 0ULL: case 3ULL: 
      o_avg_data = (sc_uint<32> ) (SobelFilter_Mul_32Sx6U_32S_4_25_out1.read());
      break;
    case 1ULL: 
      o_avg_data = (sc_uint<32> ) (SobelFilter_Mul_32Sx6S_32S_4_15_out1.read());
      break;
    case 2ULL: 
      o_avg_data = (sc_uint<32> ) (SobelFilter_Add_32Ux32U_32U_1_24_out1.read())
      ;
      break;
    }
    break;
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_ss_1
void SobelFilter::drive_i_rgb_m_busy_req_0(){
  if ( (i_rst.read() == 0ULL) ) {
    i_rgb_m_busy_req_0 = 1ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        i_rgb_m_busy_req_0 = 0ULL;
        break;
      case 1ULL: 
        i_rgb_m_busy_req_0 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_1
void SobelFilter::drive_o_avg_m_req_m_trig_req(){
  if ( (i_rst.read() == 0ULL) ) {
    o_avg_m_req_m_trig_req = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 2ULL: 
        o_avg_m_req_m_trig_req = (sc_uint<1> ) (SobelFilter_Not_1U_1U_1_3_out1
                                 .read());
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx3i1c
void SobelFilter::drive_stall0(){
  switch( (sc_uint<2>)(global_state.read()) ) {
  default:
    stall0 = 0ULL;
    break;
  case 1ULL: 
    stall0 = (sc_uint<1> )SobelFilter_gen_busy_r_4_62_out1.read();
    break;
  case 3ULL: 
    stall0 = SobelFilter_And_1Ux1U_1U_4_60_out1.read();
    break;
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_10(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_10 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_10 = s_reg_11.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_11(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_11 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_11 = s_reg_12.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_12(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_12 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_12 = s_reg_13.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_13(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_13 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_13 = s_reg_14.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_14(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_14 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_14 = s_reg_15.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_15(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_15 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_15 = s_reg_16.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_16(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_16 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_16 = s_reg_17.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_17(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_17 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_17 = s_reg_18.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_18(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_18 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_18 = s_reg_19.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_19(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_19 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_19 = s_reg_20.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_20(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_20 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_20 = s_reg_21.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_21(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_21 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_21 = s_reg_22.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_22(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_22 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_22 = s_reg_23.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_23(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_23 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_23 = s_reg_24.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_24(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_24 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_24 = s_reg_25.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_25(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_25 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_25 = s_reg_26.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_26(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_26 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_26 = s_reg_27.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_27(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_27 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_27 = s_reg_28.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_28(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_28 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_28 = s_reg_29.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_29(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_29 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_29 = s_reg_30.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_30(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_30 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_30 = s_reg_31.read();
        break;
      }
      break;
    }
  }
}
// resource: mux_32bx2i0c
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_31(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_31 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_31 = (sc_uint<32> ) (SobelFilter_Mul_32Sx3S_32S_4_26_out1.read());
        break;
      case 1ULL: 
        s_reg_31 = i_rgb_data.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_4(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_4 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      s_reg_4 = (sc_uint<32> ) (SobelFilter_Add_32Ux32U_32U_1_24_out1.read());
      break;
    }
  }
}
// resource: mux_32bx2i0c
// resource: regr_en_32
void SobelFilter::drive_s_reg_49(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    switch( (sc_uint<2>)(global_state.read()) ) {
    case 0ULL: case 3ULL: 
      s_reg_49 = (sc_uint<32> ) (SobelFilter_Mul_32Sx9U_32S_4_27_out1.read());
      break;
    case 1ULL: 
      s_reg_49 = (sc_uint<32> ) (SobelFilter_Mul_32Sx4U_32S_4_13_out1.read());
      break;
    }
    break;
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_5(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_5 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_5 = s_reg_7.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_29
void SobelFilter::drive_s_reg_6_slice(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_6_slice = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_6_slice = (sc_uint<29> )s_reg_5.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_32
void SobelFilter::drive_s_reg_66(){
  switch( (sc_uint<1>)(stall0.read()) ) {
  case 1ULL: 
    break;
  default:
    s_reg_66 = (sc_uint<32> ) (SobelFilter_Minus_32S_32S_4_16_out1.read());
    break;
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_7(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_7 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_7 = s_reg_8.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_8(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_8 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_8 = s_reg_9.read();
        break;
      }
      break;
    }
  }
}
// resource: regr_en_sc_32
void SobelFilter::drive_s_reg_9(){
  if ( (i_rst.read() == 0ULL) ) {
    s_reg_9 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state.read()) ) {
      case 0ULL: case 3ULL: 
        s_reg_9 = s_reg_10.read();
        break;
      }
      break;
    }
  }
}
// resource: mux_32bx2i0c
void SobelFilter::drive_SobelFilter_Add_32Ux32U_32U_4_6_in2(){
  if ( gs_ctrl_do_filter_h6.read() ) {
    SobelFilter_Add_32Ux32U_32U_4_6_in2 = (sc_uint<32> ) (o_avg_data.read());
  } else {
    SobelFilter_Add_32Ux32U_32U_4_6_in2 = ( (sc_uint<32> )(sc_bv<32>)(
                                          (sc_bv<29>)((sc_int<29> )s_reg_6_slice
                                          .read()), 
                                          (sc_bv<3>)(0ULL)) );
  }
}
// resource: SobelFilter_Add_32Ux32U_32U_4  instance: SobelFilter_Add_32Ux32U_32U_4_6
void SobelFilter::SobelFilter_Add_32Ux32U_32U_4_6(){
  SobelFilter_Add_32Ux32U_32U_4_6_out1 = (/*cliff*/sc_uint<32>)(
                                         SobelFilter_Add_32Ux32U_32U_4_6_in2
                                         .read() + (sc_uint<32> )s_reg_4.read())
  ;
}
// resource: mux_32bx3i0c
void SobelFilter::drive_SobelFilter_Mul_32Sx7S_32S_4_7_in2(){
  switch( (sc_uint<2>)(global_state.read()) ) {
  default:
    SobelFilter_Mul_32Sx7S_32S_4_7_in2 = (sc_int<32> ) (s_reg_5.read());
    break;
  case 1ULL: 
    SobelFilter_Mul_32Sx7S_32S_4_7_in2 = (sc_int<32> ) (s_reg_15.read());
    break;
  case 2ULL: 
    SobelFilter_Mul_32Sx7S_32S_4_7_in2 = (sc_int<32> ) (s_reg_24.read());
    break;
  }
}
// resource: mux_3bx3i3c
void SobelFilter::drive_SobelFilter_Mul_32Sx7S_32S_4_7_in1_slice(){
  switch( (sc_uint<2>)(global_state.read()) ) {
  default:
    SobelFilter_Mul_32Sx7S_32S_4_7_in1_slice = 1LL;
    break;
  case 1ULL: 
    SobelFilter_Mul_32Sx7S_32S_4_7_in1_slice = -3LL;
    break;
  case 2ULL: 
    SobelFilter_Mul_32Sx7S_32S_4_7_in1_slice = 2LL;
    break;
  }
}
// resource: SobelFilter_Mul_32Sx7S_32S_4  instance: SobelFilter_Mul_32Sx7S_32S_4_7
void SobelFilter::SobelFilter_Mul_32Sx7S_32S_4_7(){
  SobelFilter_Mul_32Sx7S_32S_4_7_out1 = (/*cliff*/sc_int<32>)
                                        SobelFilter_Mul_32Sx7S_32S_4_7_in2
                                        .read() * ( (sc_int<7> )(sc_bv<7>)(
                                        (sc_bv<1>)(((/*imp*/sc_int<1> ) 
                                        SobelFilter_Mul_32Sx7S_32S_4_7_in1_slice
                                        .read().range(2,2))), 
                                        (sc_bv<6>)(( (sc_int<6> )(sc_bv<6>)(
                                        (sc_bv<1>)(0ULL), 
                                        (sc_bv<5>)(( (sc_int<5> )(sc_bv<5>)(
                                        (sc_bv<2>)(((/*imp*/sc_int<2> ) 
                                        SobelFilter_Mul_32Sx7S_32S_4_7_in1_slice
                                        .read().range(1,0))), 
                                        (sc_bv<3>)(3ULL)) ))) ))) );
}
// resource: SobelFilter_Add_32Ux32U_32U_4  instance: SobelFilter_Add_32Ux32U_32U_4_8
void SobelFilter::SobelFilter_Add_32Ux32U_32U_4_8(){
  SobelFilter_Add_32Ux32U_32U_4_8_out1 = (/*cliff*/sc_uint<32>)((sc_uint<32> )
                                         SobelFilter_Mul_32Sx7S_32S_4_7_out1
                                         .read() + 
                                         SobelFilter_Add_32Ux32U_32U_4_6_out1
                                         .read());
}
// resource: SobelFilter_Mul_32Sx4S_32S_4  instance: SobelFilter_Mul_32Sx4S_32S_4_9
void SobelFilter::SobelFilter_Mul_32Sx4S_32S_4_9(){
  SobelFilter_Mul_32Sx4S_32S_4_9_out1 = (/*cliff*/sc_int<32>)(sc_int<32> )
                                        s_reg_7.read() * -7LL;
}
void SobelFilter::drive_SobelFilter_Minus_32S_32S_4_10_in1(){
  SobelFilter_Minus_32S_32S_4_10_in1 = (sc_int<32> ) (( (sc_uint<32> )
                                       (sc_bv<32>)((sc_bv<31>)((sc_int<31> )
                                       s_reg_8.read()), 
                                       (sc_bv<1>)(0ULL)) ));
}
// resource: SobelFilter_Minus_32S_32S_4  instance: SobelFilter_Minus_32S_32S_4_10
void SobelFilter::SobelFilter_Minus_32S_32S_4_10(){
  SobelFilter_Minus_32S_32S_4_10_out1 = (/*cliff*/sc_int<32>)((sc_int<32> ) - 
                                        SobelFilter_Minus_32S_32S_4_10_in1
                                        .read());
}
// resource: SobelFilter_Add_32Ux32U_32U_4  instance: SobelFilter_Add_32Ux32U_32U_4_11
void SobelFilter::SobelFilter_Add_32Ux32U_32U_4_11(){
  SobelFilter_Add_32Ux32U_32U_4_11_out1 = (/*cliff*/sc_uint<32>)((sc_uint<32> )
                                          SobelFilter_Mul_32Sx4S_32S_4_9_out1
                                          .read() + 
                                          SobelFilter_Add_32Ux32U_32U_4_8_out1
                                          .read());
}
// resource: SobelFilter_Add_32Ux32U_32U_4  instance: SobelFilter_Add_32Ux32U_32U_4_12
void SobelFilter::SobelFilter_Add_32Ux32U_32U_4_12(){
  SobelFilter_Add_32Ux32U_32U_4_12_out1 = (/*cliff*/sc_uint<32>)(
                                          SobelFilter_Add_32Ux32U_32U_4_11_out1
                                          .read() + (sc_uint<32> )
                                          SobelFilter_Minus_32S_32S_4_10_out1
                                          .read());
}
// resource: mux_32bx2i0c
void SobelFilter::drive_SobelFilter_Mul_32Sx4U_32S_4_13_in2(){
  if ( gs_ctrl_do_filter_h2.read() ) {
    SobelFilter_Mul_32Sx4U_32S_4_13_in2 = (sc_int<32> ) (s_reg_27.read());
  } else {
    SobelFilter_Mul_32Sx4U_32S_4_13_in2 = (sc_int<32> ) (s_reg_9.read());
  }
}
// resource: SobelFilter_Mul_32Sx4U_32S_4  instance: SobelFilter_Mul_32Sx4U_32S_4_13
void SobelFilter::SobelFilter_Mul_32Sx4U_32S_4_13(){
  SobelFilter_Mul_32Sx4U_32S_4_13_out1 = (/*cliff*/sc_int<32>)
                                         SobelFilter_Mul_32Sx4U_32S_4_13_in2
                                         .read() * 11ULL;
}
// resource: mux_32bx2i0c
void SobelFilter::drive_SobelFilter_Add_32Ux32U_32U_4_14_in2(){
  if ( gs_ctrl_do_filter_h4.read() ) {
    SobelFilter_Add_32Ux32U_32U_4_14_in2 = SobelFilter_Add_32Ux32U_32U_4_8_out1
                                           .read();
  } else {
    SobelFilter_Add_32Ux32U_32U_4_14_in2 = (sc_uint<32> ) (
                                           SobelFilter_Mul_32Sx4U_32S_4_13_out1
                                           .read());
  }
}
// resource: mux_32bx2i0c
void SobelFilter::drive_SobelFilter_Add_32Ux32U_32U_4_14_in1(){
  if ( gs_ctrl_do_filter_h4.read() ) {
    SobelFilter_Add_32Ux32U_32U_4_14_in1 = (sc_uint<32> ) (s_reg_66.read());
  } else {
    SobelFilter_Add_32Ux32U_32U_4_14_in1 = SobelFilter_Add_32Ux32U_32U_4_12_out1
                                           .read();
  }
}
// resource: SobelFilter_Add_32Ux32U_32U_4  instance: SobelFilter_Add_32Ux32U_32U_4_14
void SobelFilter::SobelFilter_Add_32Ux32U_32U_4_14(){
  SobelFilter_Add_32Ux32U_32U_4_14_out1 = (/*cliff*/sc_uint<32>)(
                                          SobelFilter_Add_32Ux32U_32U_4_14_in2
                                          .read() + 
                                          SobelFilter_Add_32Ux32U_32U_4_14_in1
                                          .read());
}
// resource: mux_32bx3i0c
void SobelFilter::drive_SobelFilter_Mul_32Sx6S_32S_4_15_in2(){
  switch( (sc_uint<2>)(global_state.read()) ) {
  default:
    SobelFilter_Mul_32Sx6S_32S_4_15_in2 = (sc_int<32> ) (s_reg_10.read());
    break;
  case 1ULL: 
    SobelFilter_Mul_32Sx6S_32S_4_15_in2 = (sc_int<32> ) (s_reg_23.read());
    break;
  case 2ULL: 
    SobelFilter_Mul_32Sx6S_32S_4_15_in2 = (sc_int<32> ) (s_reg_26.read());
    break;
  }
}
// resource: mux_4bx2i2c
void SobelFilter::drive_SobelFilter_Mul_32Sx6S_32S_4_15_in1_slice(){
  if ( gs_ctrl_do_filter_h2.read() ) {
    SobelFilter_Mul_32Sx6S_32S_4_15_in1_slice = 5LL;
  } else {
    SobelFilter_Mul_32Sx6S_32S_4_15_in1_slice = -6LL;
  }
}
// resource: SobelFilter_Mul_32Sx6S_32S_4  instance: SobelFilter_Mul_32Sx6S_32S_4_15
void SobelFilter::SobelFilter_Mul_32Sx6S_32S_4_15(){
  SobelFilter_Mul_32Sx6S_32S_4_15_out1 = (/*cliff*/sc_int<32>)
                                         SobelFilter_Mul_32Sx6S_32S_4_15_in2
                                         .read() * ( (sc_int<6> )(sc_bv<6>)(
                                         (sc_bv<1>)(1ULL), 
                                         (sc_bv<5>)(( (sc_int<5> )(sc_bv<5>)(
                                         (sc_bv<4>)((sc_int<4> )SobelFilter_Mul_32Sx6S_32S_4_15_in1_slice
                                         .read()), 
                                         (sc_bv<1>)(1ULL)) ))) );
}
// resource: mux_31bx3i0c
void SobelFilter::drive_SobelFilter_Minus_32S_32S_4_16_in1_slice(){
  switch( (sc_uint<2>)(global_state.read()) ) {
  default:
    SobelFilter_Minus_32S_32S_4_16_in1_slice = (sc_int<31> )s_reg_11.read();
    break;
  case 1ULL: 
    SobelFilter_Minus_32S_32S_4_16_in1_slice = (sc_int<31> )s_reg_25.read();
    break;
  case 2ULL: 
    SobelFilter_Minus_32S_32S_4_16_in1_slice = (sc_int<31> )s_reg_28.read();
    break;
  }
}
// resource: SobelFilter_Minus_32S_32S_4  instance: SobelFilter_Minus_32S_32S_4_16
void SobelFilter::SobelFilter_Minus_32S_32S_4_16(){
  SobelFilter_Minus_32S_32S_4_16_out1 = (/*cliff*/sc_int<32>)((sc_int<32> ) - ( 
                                        (sc_int<32> )(sc_bv<32>)((sc_bv<31>)((
                                        sc_int<31> )
                                        SobelFilter_Minus_32S_32S_4_16_in1_slice
                                        .read()), 
                                        (sc_bv<1>)(0ULL)) ));
}
// resource: mux_32bx2i0c
void SobelFilter::drive_SobelFilter_Add_32Ux32U_32U_4_31_in2(){
  if ( gs_ctrl_do_filter_h2.read() ) {
    SobelFilter_Add_32Ux32U_32U_4_31_in2 = (sc_uint<32> ) (s_reg_31.read());
  } else {
    SobelFilter_Add_32Ux32U_32U_4_31_in2 = (sc_uint<32> ) (
                                           SobelFilter_Mul_32Sx6S_32S_4_15_out1
                                           .read());
  }
}
// resource: mux_32bx2i0c
void SobelFilter::drive_SobelFilter_Add_32Ux32U_32U_4_31_in1(){
  if ( gs_ctrl_do_filter_h2.read() ) {
    SobelFilter_Add_32Ux32U_32U_4_31_in1 = SobelFilter_Add_32Ux32U_32U_4_8_out1
                                           .read();
  } else {
    SobelFilter_Add_32Ux32U_32U_4_31_in1 = SobelFilter_Add_32Ux32U_32U_4_14_out1
                                           .read();
  }
}
// resource: SobelFilter_Add_32Ux32U_32U_4  instance: SobelFilter_Add_32Ux32U_32U_4_31
void SobelFilter::SobelFilter_Add_32Ux32U_32U_4_31(){
  SobelFilter_Add_32Ux32U_32U_4_31_out1 = (/*cliff*/sc_uint<32>)(
                                          SobelFilter_Add_32Ux32U_32U_4_31_in2
                                          .read() + 
                                          SobelFilter_Add_32Ux32U_32U_4_31_in1
                                          .read());
}
// resource: mux_32bx3i0c
void SobelFilter::drive_SobelFilter_Add_32Ux32U_32U_4_18_in2(){
  switch( (sc_uint<2>)(global_state.read()) ) {
  default:
    SobelFilter_Add_32Ux32U_32U_4_18_in2 = SobelFilter_Add_32Ux32U_32U_4_31_out1
                                           .read();
    break;
  case 1ULL: 
    SobelFilter_Add_32Ux32U_32U_4_18_in2 = (sc_uint<32> ) (
                                           SobelFilter_Mul_32Sx3S_32S_4_26_out1
                                           .read());
    break;
  case 2ULL: 
    SobelFilter_Add_32Ux32U_32U_4_18_in2 = SobelFilter_Add_32Ux32U_32U_4_32_out1
                                           .read();
    break;
  }
}
// resource: mux_32bx2i0c
void SobelFilter::drive_SobelFilter_Add_32Ux32U_32U_4_18_in1(){
  if ( gs_ctrl_do_filter_h2.read() ) {
    SobelFilter_Add_32Ux32U_32U_4_18_in1 = SobelFilter_Add_32Ux32U_32U_4_34_out1
                                           .read();
  } else {
    SobelFilter_Add_32Ux32U_32U_4_18_in1 = (sc_uint<32> ) (
                                           SobelFilter_Minus_32S_32S_4_16_out1
                                           .read());
  }
}
// resource: SobelFilter_Add_32Ux32U_32U_4  instance: SobelFilter_Add_32Ux32U_32U_4_18
void SobelFilter::SobelFilter_Add_32Ux32U_32U_4_18(){
  SobelFilter_Add_32Ux32U_32U_4_18_out1 = (/*cliff*/sc_uint<32>)(
                                          SobelFilter_Add_32Ux32U_32U_4_18_in2
                                          .read() + 
                                          SobelFilter_Add_32Ux32U_32U_4_18_in1
                                          .read());
}
// resource: mux_32bx3i0c
void SobelFilter::drive_SobelFilter_Mul_32Sx7S_32S_4_19_in2(){
  switch( (sc_uint<2>)(global_state.read()) ) {
  default:
    SobelFilter_Mul_32Sx7S_32S_4_19_in2 = (sc_int<32> ) (s_reg_12.read());
    break;
  case 1ULL: 
    SobelFilter_Mul_32Sx7S_32S_4_19_in2 = (sc_int<32> ) (s_reg_20.read());
    break;
  case 2ULL: 
    SobelFilter_Mul_32Sx7S_32S_4_19_in2 = (sc_int<32> ) (s_reg_29.read());
    break;
  }
}
// resource: mux_5bx3i3c
void SobelFilter::drive_SobelFilter_Mul_32Sx7S_32S_4_19_in1_slice(){
  switch( (sc_uint<2>)(global_state.read()) ) {
  default:
    SobelFilter_Mul_32Sx7S_32S_4_19_in1_slice = 5LL;
    break;
  case 1ULL: 
    SobelFilter_Mul_32Sx7S_32S_4_19_in1_slice = -13LL;
    break;
  case 2ULL: 
    SobelFilter_Mul_32Sx7S_32S_4_19_in1_slice = -2LL;
    break;
  }
}
// resource: SobelFilter_Mul_32Sx7S_32S_4  instance: SobelFilter_Mul_32Sx7S_32S_4_19
void SobelFilter::SobelFilter_Mul_32Sx7S_32S_4_19(){
  SobelFilter_Mul_32Sx7S_32S_4_19_out1 = (/*cliff*/sc_int<32>)
                                         SobelFilter_Mul_32Sx7S_32S_4_19_in2
                                         .read() * ( (sc_int<7> )(sc_bv<7>)(
                                         (sc_bv<4>)(((/*imp*/sc_int<4> ) SobelFilter_Mul_32Sx7S_32S_4_19_in1_slice
                                         .read().range(4,1))), 
                                         (sc_bv<3>)(( (sc_int<3> )(sc_bv<3>)(
                                         (sc_bv<1>)(0ULL), 
                                         (sc_bv<2>)(( (sc_int<2> )(sc_bv<2>)(
                                         (sc_bv<1>)(((/*imp*/sc_int<1> ) SobelFilter_Mul_32Sx7S_32S_4_19_in1_slice
                                         .read().range(0,0))), 
                                         (sc_bv<1>)(1ULL)) ))) ))) );
}
// resource: SobelFilter_Add_32Ux32U_32U_1  instance: SobelFilter_Add_32Ux32U_32U_1_20
void SobelFilter::SobelFilter_Add_32Ux32U_32U_1_20(){
  SobelFilter_Add_32Ux32U_32U_1_20_out1 = (/*cliff*/sc_uint<32>)((sc_uint<32> )
                                          SobelFilter_Mul_32Sx7S_32S_4_19_out1
                                          .read() + 
                                          SobelFilter_Add_32Ux32U_32U_4_18_out1
                                          .read());
}
// resource: mux_32bx3i0c
void SobelFilter::drive_SobelFilter_Mul_32Sx7S_32S_4_21_in2(){
  switch( (sc_uint<2>)(global_state.read()) ) {
  default:
    SobelFilter_Mul_32Sx7S_32S_4_21_in2 = (sc_int<32> ) (s_reg_13.read());
    break;
  case 1ULL: 
    SobelFilter_Mul_32Sx7S_32S_4_21_in2 = (sc_int<32> ) (s_reg_21.read());
    break;
  case 2ULL: 
    SobelFilter_Mul_32Sx7S_32S_4_21_in2 = (sc_int<32> ) (s_reg_30.read());
    break;
  }
}
// resource: mux_4bx3i3c
void SobelFilter::drive_SobelFilter_Mul_32Sx7S_32S_4_21_in1_slice(){
  switch( (sc_uint<2>)(global_state.read()) ) {
  default:
    SobelFilter_Mul_32Sx7S_32S_4_21_in1_slice = -2LL;
    break;
  case 1ULL: 
    SobelFilter_Mul_32Sx7S_32S_4_21_in1_slice = 5LL;
    break;
  case 2ULL: 
    SobelFilter_Mul_32Sx7S_32S_4_21_in1_slice = 2LL;
    break;
  }
}
// resource: SobelFilter_Mul_32Sx7S_32S_4  instance: SobelFilter_Mul_32Sx7S_32S_4_21
void SobelFilter::SobelFilter_Mul_32Sx7S_32S_4_21(){
  SobelFilter_Mul_32Sx7S_32S_4_21_out1 = (/*cliff*/sc_int<32>)
                                         SobelFilter_Mul_32Sx7S_32S_4_21_in2
                                         .read() * ( (sc_int<7> )(sc_bv<7>)(
                                         (sc_bv<2>)(((/*imp*/sc_int<2> ) SobelFilter_Mul_32Sx7S_32S_4_21_in1_slice
                                         .read().range(3,2))), 
                                         (sc_bv<5>)(( (sc_int<5> )(sc_bv<5>)(
                                         (sc_bv<1>)(0ULL), 
                                         (sc_bv<4>)(( (sc_int<4> )(sc_bv<4>)(
                                         (sc_bv<2>)(((/*imp*/sc_int<2> ) SobelFilter_Mul_32Sx7S_32S_4_21_in1_slice
                                         .read().range(1,0))), 
                                         (sc_bv<2>)(3ULL)) ))) ))) );
}
// resource: SobelFilter_Add_32Ux32U_32U_1  instance: SobelFilter_Add_32Ux32U_32U_1_22
void SobelFilter::SobelFilter_Add_32Ux32U_32U_1_22(){
  SobelFilter_Add_32Ux32U_32U_1_22_out1 = (/*cliff*/sc_uint<32>)((sc_uint<32> )
                                          SobelFilter_Mul_32Sx7S_32S_4_21_out1
                                          .read() + 
                                          SobelFilter_Add_32Ux32U_32U_1_20_out1
                                          .read());
}
// resource: mux_32bx2i0c
void SobelFilter::drive_SobelFilter_Mul_32Sx3S_32S_4_23_in2(){
  if ( gs_ctrl_do_filter_h2.read() ) {
    SobelFilter_Mul_32Sx3S_32S_4_23_in2 = (sc_int<32> ) (s_reg_22.read());
  } else {
    SobelFilter_Mul_32Sx3S_32S_4_23_in2 = (sc_int<32> ) (s_reg_14.read());
  }
}
// resource: SobelFilter_Mul_32Sx3S_32S_4  instance: SobelFilter_Mul_32Sx3S_32S_4_23
void SobelFilter::SobelFilter_Mul_32Sx3S_32S_4_23(){
  SobelFilter_Mul_32Sx3S_32S_4_23_out1 = (/*cliff*/sc_int<32>)
                                         SobelFilter_Mul_32Sx3S_32S_4_23_in2
                                         .read() * -3LL;
}
// resource: mux_32bx2i0c
void SobelFilter::drive_SobelFilter_Add_32Ux32U_32U_1_24_in2(){
  if ( gs_ctrl_do_filter_h4.read() ) {
    SobelFilter_Add_32Ux32U_32U_1_24_in2 = ( (sc_uint<32> )(sc_bv<32>)(
                                           (sc_bv<29>)((sc_int<29> )s_reg_31
                                           .read()), 
                                           (sc_bv<3>)(0ULL)) );
  } else {
    SobelFilter_Add_32Ux32U_32U_1_24_in2 = (sc_uint<32> ) (
                                           SobelFilter_Mul_32Sx3S_32S_4_23_out1
                                           .read());
  }
}
// resource: SobelFilter_Add_32Ux32U_32U_1  instance: SobelFilter_Add_32Ux32U_32U_1_24
void SobelFilter::SobelFilter_Add_32Ux32U_32U_1_24(){
  SobelFilter_Add_32Ux32U_32U_1_24_out1 = (/*cliff*/sc_uint<32>)(
                                          SobelFilter_Add_32Ux32U_32U_1_24_in2
                                          .read() + 
                                          SobelFilter_Add_32Ux32U_32U_1_22_out1
                                          .read());
}
// resource: SobelFilter_Mul_32Sx6U_32S_4  instance: SobelFilter_Mul_32Sx6U_32S_4_25
void SobelFilter::SobelFilter_Mul_32Sx6U_32S_4_25(){
  SobelFilter_Mul_32Sx6U_32S_4_25_out1 = (/*cliff*/sc_int<32>)(sc_int<32> )
                                         s_reg_15.read() * 39ULL;
}
// resource: mux_32bx2i0c
void SobelFilter::drive_SobelFilter_Mul_32Sx3S_32S_4_26_in2(){
  if ( gs_ctrl_do_filter_h2.read() ) {
    SobelFilter_Mul_32Sx3S_32S_4_26_in2 = (sc_int<32> ) (s_reg_19.read());
  } else {
    SobelFilter_Mul_32Sx3S_32S_4_26_in2 = (sc_int<32> ) (s_reg_17.read());
  }
}
// resource: SobelFilter_Mul_32Sx3S_32S_4  instance: SobelFilter_Mul_32Sx3S_32S_4_26
void SobelFilter::SobelFilter_Mul_32Sx3S_32S_4_26(){
  SobelFilter_Mul_32Sx3S_32S_4_26_out1 = (/*cliff*/sc_int<32>)
                                         SobelFilter_Mul_32Sx3S_32S_4_26_in2
                                         .read() * -3LL;
}
// resource: SobelFilter_Mul_32Sx9U_32S_4  instance: SobelFilter_Mul_32Sx9U_32S_4_27
void SobelFilter::SobelFilter_Mul_32Sx9U_32S_4_27(){
  SobelFilter_Mul_32Sx9U_32S_4_27_out1 = (/*cliff*/sc_int<32>)(sc_int<32> )
                                         s_reg_18.read() * 283ULL;
}
// resource: SobelFilter_Add_32Ux32U_32U_4  instance: SobelFilter_Add_32Ux32U_32U_4_32
void SobelFilter::SobelFilter_Add_32Ux32U_32U_4_32(){
  SobelFilter_Add_32Ux32U_32U_4_32_out1 = (/*cliff*/sc_uint<32>)((sc_uint<32> )
                                          s_reg_49.read() + 
                                          SobelFilter_Add_32Ux32U_32U_4_31_out1
                                          .read());
}
// resource: SobelFilter_Add_32Ux32U_32U_4  instance: SobelFilter_Add_32Ux32U_32U_4_34
void SobelFilter::SobelFilter_Add_32Ux32U_32U_4_34(){
  SobelFilter_Add_32Ux32U_32U_4_34_out1 = (/*cliff*/sc_uint<32>)((sc_uint<32> )
                                          SobelFilter_Mul_32Sx9U_32S_4_27_out1
                                          .read() + 
                                          SobelFilter_Add_32Ux32U_32U_4_32_out1
                                          .read());
}
// resource: regr_en_sc_2
void SobelFilter::drive_global_state(){
  if ( (i_rst.read() == 0ULL) ) {
    global_state = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      global_state = global_state_next.read();
      break;
    }
  }
}
// resource: mux_2bx2i1c
void SobelFilter::drive_global_state_next(){
  switch( (sc_uint<2>)(global_state.read()) ) {
  default:
    global_state_next = (global_state.read() + 1ULL);
    break;
  case 0ULL: case 3ULL: 
    global_state_next = 1ULL;
    break;
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h6(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h6 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h6 = 0ULL;
        break;
      case 1ULL: case 2ULL: 
        gs_ctrl_do_filter_h6 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h2(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h2 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h2 = 0ULL;
        break;
      case 1ULL: 
        gs_ctrl_do_filter_h2 = 1ULL;
        break;
      }
      break;
    }
  }
}
// resource: mux_1bx2i2c
// resource: regr_en_sc_1
void SobelFilter::drive_gs_ctrl_do_filter_h4(){
  if ( (i_rst.read() == 0ULL) ) {
    gs_ctrl_do_filter_h4 = 0ULL;
  } else {
    switch( (sc_uint<1>)(stall0.read()) ) {
    case 1ULL: 
      break;
    default:
      switch( (sc_uint<2>)(global_state_next.read()) ) {
      default:
        gs_ctrl_do_filter_h4 = 0ULL;
        break;
      case 2ULL: 
        gs_ctrl_do_filter_h4 = 1ULL;
        break;
      }
      break;
    }
  }
}
void SobelFilter::drive_i_rgb_busy(){
  i_rgb_busy = (sc_uint<1> ) (((/*imp*/sc_uint<1> ) 
               SobelFilter_gen_busy_r_4_62_out1.read().range(2,2)));
}
// resource: SobelFilter_gen_busy_r_4  instance: SobelFilter_gen_busy_r_4_62
void SobelFilter::SobelFilter_gen_busy_r_4_62_p7(){
  SobelFilter_gen_busy_r_4_62_out1 = (sc_uint<3> ) (( (sc_biguint<3> )(sc_bv<3>)
                                     ((sc_bv<1>)(
                                     SobelFilter_gen_busy_r_4_62_gnew_req.read()
                                     ), 
                                     (sc_bv<2>)(( (sc_biguint<2> )(sc_bv<2>)(
                                     (sc_bv<1>)(SobelFilter_gen_busy_r_4_62_gdiv
                                     .read()), 
                                     (sc_bv<1>)(SobelFilter_gen_busy_r_4_62_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next
                                     .read())) ))) ));
}
// resource: SobelFilter_gen_busy_r_4  instance: SobelFilter_gen_busy_r_4_62
void SobelFilter::SobelFilter_gen_busy_r_4_62_p6(){
  SobelFilter_gen_busy_r_4_62_i_rgb_gen_busy_i_rgb_m_data_is_invalid_next = ~(sc_uint<1>)SobelFilter_gen_busy_r_4_62_gdiv.read()
  ;
}
// resource: SobelFilter_gen_busy_r_4  instance: SobelFilter_gen_busy_r_4_62
void SobelFilter::SobelFilter_gen_busy_r_4_62_p5(){
  SobelFilter_gen_busy_r_4_62_gdiv = (sc_uint<1> ) ((sc_uint<1> )i_rgb_vld
                                     .read() & !
                                     SobelFilter_gen_busy_r_4_62_gnew_req.read()
                                     );
}
// resource: SobelFilter_gen_busy_r_4  instance: SobelFilter_gen_busy_r_4_62
void SobelFilter::SobelFilter_gen_busy_r_4_62_p4(){
  SobelFilter_gen_busy_r_4_62_gnew_req = (sc_uint<1> ) ((sc_uint<1> )
                                         i_rgb_m_busy_req_0.read() & ( 
                                         i_rgb_m_unvalidated_req.read() | 
                                         i_rgb_vld.read() ));
}
// resource: regr_ss_1
void SobelFilter::drive_i_rgb_m_unvalidated_req(){
  if ( (i_rst.read() == 0ULL) ) {
    i_rgb_m_unvalidated_req = 1ULL;
  } else {
    i_rgb_m_unvalidated_req = (sc_uint<1> ) (SobelFilter_N_Muxb_1_2_0_4_4_out1
                              .read());
  }
}
// resource: SobelFilter_N_Muxb_1_2_0_4
void SobelFilter::SobelFilter_N_Muxb_1_2_0_4_4(){
  if ( i_rgb_m_busy_req_0.read() ) {
    SobelFilter_N_Muxb_1_2_0_4_4_out1 = (sc_uint<1> ) (i_rgb_m_unvalidated_req
                                        .read());
  } else {
    SobelFilter_N_Muxb_1_2_0_4_4_out1 = (sc_uint<1> ) (i_rgb_vld.read());
  }
}
void SobelFilter::drive_o_avg_vld(){
  o_avg_vld = (sc_uint<1> ) (SobelFilter_Or_1Ux1U_1U_4_2_out1.read());
}
// resource: SobelFilter_Or_1Ux1U_1U_4  instance: SobelFilter_Or_1Ux1U_1U_4_2
void SobelFilter::SobelFilter_Or_1Ux1U_1U_4_2(){
  SobelFilter_Or_1Ux1U_1U_4_2_out1 = (sc_uint<1> ) (o_avg_m_unacked_req.read()
                                      | (sc_uint<1>)
                                     SobelFilter_Xor_1Ux1U_1U_1_1_out1.read());
}
// resource: regr_sc_1
void SobelFilter::drive_o_avg_m_unacked_req(){
  if ( (i_rst.read() == 0ULL) ) {
    o_avg_m_unacked_req = 0ULL;
  } else {
    o_avg_m_unacked_req = (sc_uint<1> ) (SobelFilter_And_1Ux1U_1U_4_60_out1
                          .read());
  }
}
// resource: SobelFilter_And_1Ux1U_1U_4  instance: SobelFilter_And_1Ux1U_1U_4_60
void SobelFilter::SobelFilter_And_1Ux1U_1U_4_60(){
  SobelFilter_And_1Ux1U_1U_4_60_out1 = (sc_uint<1> ) (o_avg_busy.read() & 
                                       o_avg_vld.read());
}
// resource: SobelFilter_Xor_1Ux1U_1U_1  instance: SobelFilter_Xor_1Ux1U_1U_1_1
void SobelFilter::SobelFilter_Xor_1Ux1U_1U_1_1(){
  SobelFilter_Xor_1Ux1U_1U_1_1_out1 = (sc_uint<1> ) (o_avg_m_req_m_trig_req
                                      .read() ^ o_avg_m_req_m_prev_trig_req
                                      .read());
}
// resource: regr_sc_1
void SobelFilter::drive_o_avg_m_req_m_prev_trig_req(){
  if ( (i_rst.read() == 0ULL) ) {
    o_avg_m_req_m_prev_trig_req = 0ULL;
  } else {
    o_avg_m_req_m_prev_trig_req = o_avg_m_req_m_trig_req.read();
  }
}
// resource: SobelFilter_Not_1U_1U_1  instance: SobelFilter_Not_1U_1U_1_3
void SobelFilter::SobelFilter_Not_1U_1U_1_3(){
  SobelFilter_Not_1U_1U_1_3_out1 = !o_avg_m_req_m_trig_req.read();
}
